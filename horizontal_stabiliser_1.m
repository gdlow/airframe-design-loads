%% General analysis of load case 1 on the horizontal stabiliser
clear
clc
close all

%% Enter geometry of tailplane horizontal stabiliser

% rootChordLen - root chord length [m]
% tipChordLen - tip chord length [m]
% wingSemiSpan - wing semi-span [m]
% takeOffWeight - Take-off weight of entire aircraft [N]
% N - Number of stations [-]
% n - Load factor [-]
% fuelTankLen - Length of fuel tank wrt half span [m]
[vals, names] = xlsread('geometryVariables.xlsx', 'Data', 'B:C');
geoParams = containers.Map(names(2:end,1), vals);
rootChordLen_h = geoParams('rootChordLen_h');
tipChordLen_h = geoParams('tipChordLen_h');
aspectRatio_h = geoParams('aspectRatio_h');
MAC_h = geoParams('MAC_h');
wingSemiSpan = aspectRatio_h*MAC_h/2;
weightStabilizer_h = geoParams('weightStabilizer_h'); % get from AVD report
N = 100; % according to lecturer 
n = 1.5*2.5;

%% Enter operating conditions and pitch aerodyamic moment
CM0_h = geoParams('CM0_h'); % pitch aerodynamic moment from airofoil data
cruiseVelocity = 232.78; 
rho = 0.350085776097978; % density of air at 37k ft

%% Obtain lift generated by tailplane
% by considering bending moments around the cg of plane
MAC_wing = geoParams('MAC_wing');
aspectRatio_w = geoParams('aspectRatio_w');
Sref = aspectRatio_w * MAC_wing^2;
x_tail = geoParams('x_tail'); x_cg = geoParams('x_cg'); x_ac = geoParams('x_ac');
momentArmTailPlane = x_tail - x_cg;
momentArmWing = -(x_cg - x_ac); % x_ac !< x_cg
CM0_w = geoParams('CM0_w');
M0_g = 0.5*rho*cruiseVelocity^2*Sref*MAC_wing*CM0_w;
takeOffWeight = geoParams('takeOffWeight');
% this gets it for half the entire horizontal stabilizer
horizontalStabilizerLift = 0.5 * (momentArmWing*takeOffWeight*9.81-M0_g) / ...
    (momentArmWing+momentArmTailPlane);
%% Function call to get shear forces and bending moments
[x, chord, distLift, distWeightWing, shearForceWing, bendingMomentWing] = ...
    horizontal_stabilizer_load(rootChordLen_h, tipChordLen_h , wingSemiSpan , ...
    horizontalStabilizerLift,weightStabilizer_h, N , n);

flexAxis = 0.45*chord; % Flex axis is 25 to 65 of chord
ac = 0.25*chord; % aerodynamic center
a = flexAxis - ac; % distance between the flex axis and AC
cgWing = 0.55*chord;
b = cgWing - flexAxis; % difference between cg with respect to chord of wing and FA

% load distributions
distLoad = distLift+distWeightWing;

figure;
hold on
grid on; grid minor;
title('Distributed Loads on Horizontal Stabilizer');
xlabel('Span along Wing [m]');
ylabel('Load per unit meter [N/m]');
plot(x,distLift,'b', 'LineWidth', 2) % lift
plot(x,distWeightWing,'r', 'LineWidth', 2) % self weight
plot(x,distLoad,'k', 'LineWidth', 2) % total load
legend('Elliptical Lift Distribution', 'Distributed Weight due to Self-Weight', ...
    'Total Load (including Engine Loads)');
hold off

% moment distribution
figure;
hold on;
grid on; grid minor;
title('Bending Moment Distribution across Horizontal Stabilizer');
xlabel('Span along wing [m]');
ylabel('Moment per unit meter [N]');
plot(x,bendingMomentWing,'k', 'LineWidth', 2) % all
legend('Bending Moment on the Horizontal Stabilizer due to self-weight and lift');
hold off

% shear force:
figure;
hold on;
grid on; grid minor;
title('Shear Force Distribution across Horizontal Stabilizer');
xlabel('Span along wing [m]');
ylabel('Shear Force per unit meter [N/m]');
plot(x, shearForceWing,'k', 'LineWidth', 2)
legend('Shear Force on the Wing due to self-weight and lift');
hold off

% torque distribution
M_0 = 0.5*rho*cruiseVelocity^2.*chord.^2.*CM0_h;
T = distLift.*a-distWeightWing.*b;

figure;
hold on
grid on; grid minor;
title('Torque Distribution across Horizontal Stabilizer');
xlabel('Span along Horizontal Stabilizer [m]');
ylabel('Torque per unit meter [N]');
plot(x,T, 'LineWidth', 2) % torque along span
hold off



